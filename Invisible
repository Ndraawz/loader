-- Constants
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local TextService = game:GetService("TextService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

local GUI_WIDTH = 200
local guiPos = UDim2.new(0.5, -GUI_WIDTH / 2, 0.5, -55)
local isMinimized = false

local MINIMIZED_HEIGHT = 30
local MAXIMIZED_HEIGHT = 90
local BUTTON_HEIGHT = 24
local UI_PADDING = 8
local HEADER_HEIGHT = 30
local BUTTON_WIDTH = 24
local BUTTON_SPACING = 4

local COLOR_FRAME_BACKGROUND = Color3.fromRGB(15, 15, 15)
local COLOR_TEXT_PRIMARY = Color3.new(1, 1, 1)
local COLOR_BUTTON_ACTION_PRIMARY = Color3.fromRGB(50, 50, 50)
local COLOR_BUTTON_DELETE = Color3.fromRGB(200, 0, 0)
local COLOR_BUTTON_TOGGLE_ON = Color3.fromRGB(0, 180, 80)
local COLOR_BUTTON_TOGGLE_OFF = Color3.fromRGB(200, 0, 0)
local COLOR_BORDER_RADIUS = UDim.new(0, 12)
local COLOR_BUTTON_RADIUS = UDim.new(0, 6)

local isToggledOn = false
local RealCharacter = player.Character or player.CharacterAdded:Wait()
local FakeCharacter
local Part
local CanInvis = true

local function setupCharacters()
    RealCharacter.Archivable = true
    FakeCharacter = RealCharacter:Clone()
    FakeCharacter.Parent = workspace

    Part = Instance.new("Part", workspace)
    Part.Anchored = true
    Part.Size = Vector3.new(200, 1, 200)
    Part.CFrame = CFrame.new(9999, 9999, 9999)
    Part.CanCollide = true

    FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)

    for i, v in pairs(RealCharacter:GetChildren()) do
        if v:IsA("LocalScript") then
            local clone = v:Clone()
            clone.Disabled = true
            clone.Parent = FakeCharacter
        end
    end
    for _, v in pairs(FakeCharacter:GetDescendants()) do
        if v:IsA("BasePart") then
            v.Transparency = 0.7
        end
    end
end

local function handleCharacterDied()
    CanInvis = false
    isToggledOn = false
    
    if RealCharacter then
        RealCharacter:Destroy()
    end
    if FakeCharacter then
        FakeCharacter:Destroy()
    end
    if Part then
        Part:Destroy()
    end

    RealCharacter = player.Character
    if not RealCharacter then
        RealCharacter = player.CharacterAdded:Wait()
    end
    
    CanInvis = true
    setupCharacters()
end

RealCharacter.Humanoid.Died:Connect(function()
    if isToggledOn then
        InvisibleToggle()
    end
    RealCharacter:Destroy()
    FakeCharacter:Destroy()
end)
player.CharacterAppearanceLoaded:Connect(handleCharacterDied)
setupCharacters()

local PseudoAnchor = FakeCharacter.HumanoidRootPart
RunService.RenderStepped:Connect(function()
    if PseudoAnchor ~= nil then
        PseudoAnchor.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
    end
end)

local function InvisibleToggle()
    if not CanInvis or not RealCharacter or not FakeCharacter then return end
    if not RealCharacter:FindFirstChild("HumanoidRootPart") or not FakeCharacter:FindFirstChild("HumanoidRootPart") then return end
    
    if not isToggledOn then
        local StoredCF = RealCharacter.HumanoidRootPart.CFrame
        RealCharacter.HumanoidRootPart.CFrame = FakeCharacter.HumanoidRootPart.CFrame
        FakeCharacter.HumanoidRootPart.CFrame = StoredCF
        
        RealCharacter.Humanoid:UnequipTools()
        player.Character = FakeCharacter
        workspace.CurrentCamera.CameraSubject = FakeCharacter.Humanoid
        PseudoAnchor = RealCharacter.HumanoidRootPart
        
        for _, v in pairs(FakeCharacter:GetChildren()) do
            if v:IsA("LocalScript") then
                v.Disabled = false
            end
        end
        
        isToggledOn = true
    else
        local StoredCF = FakeCharacter.HumanoidRootPart.CFrame
        FakeCharacter.HumanoidRootPart.CFrame = RealCharacter.HumanoidRootPart.CFrame
        RealCharacter.HumanoidRootPart.CFrame = StoredCF

        FakeCharacter.Humanoid:UnequipTools()
        player.Character = RealCharacter
        workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid
        PseudoAnchor = FakeCharacter.HumanoidRootPart
        
        for _, v in pairs(FakeCharacter:GetChildren()) do
            if v:IsA("LocalScript") then
                v.Disabled = true
            end
        end

        isToggledOn = false
    end
end

if game.CoreGui:FindFirstChild("InvisibleGUI") then
    game.CoreGui.InvisibleGUI:Destroy()
end

local mainGui = Instance.new("ScreenGui")
mainGui.Name = "InvisibleGUI"
mainGui.Parent = game.CoreGui
mainGui.ResetOnSpawn = false

local frame = Instance.new("Frame")
frame.Parent = mainGui
frame.Size = UDim2.new(0, GUI_WIDTH, 0, MAXIMIZED_HEIGHT)
frame.Position = guiPos
frame.BackgroundColor3 = COLOR_FRAME_BACKGROUND
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.ClipsDescendants = true
Instance.new("UICorner", frame).CornerRadius = COLOR_BORDER_RADIUS

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Parent = frame
TitleLabel.Size = UDim2.new(1, 0, 0, HEADER_HEIGHT)
TitleLabel.Position = UDim2.new(0, UI_PADDING, 0, 0)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Text = "FE Invisible"
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.TextSize = 20
TitleLabel.TextColor3 = COLOR_TEXT_PRIMARY
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
TitleLabel.TextWrapped = false

local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "Minimize"
MinimizeButton.Parent = frame
MinimizeButton.Size = UDim2.new(0, BUTTON_WIDTH, 0, BUTTON_WIDTH)
MinimizeButton.Position = UDim2.new(1, -BUTTON_WIDTH * 2 - BUTTON_SPACING - UI_PADDING, 0, (HEADER_HEIGHT-BUTTON_WIDTH)/2)
MinimizeButton.BackgroundColor3 = COLOR_BUTTON_ACTION_PRIMARY
MinimizeButton.Text = "-"
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.TextSize = 20
MinimizeButton.TextColor3 = COLOR_TEXT_PRIMARY
Instance.new("UICorner", MinimizeButton).CornerRadius = COLOR_BUTTON_RADIUS
MinimizeButton.Visible = true

local MaximizeButton = Instance.new("TextButton")
MaximizeButton.Name = "Maximize"
MaximizeButton.Parent = frame
MaximizeButton.Size = UDim2.new(0, BUTTON_WIDTH, 0, BUTTON_WIDTH)
MaximizeButton.Position = UDim2.new(1, -BUTTON_WIDTH * 2 - BUTTON_SPACING - UI_PADDING, 0, (HEADER_HEIGHT-BUTTON_WIDTH)/2)
MaximizeButton.BackgroundColor3 = COLOR_BUTTON_ACTION_PRIMARY
MaximizeButton.Text = "+"
MaximizeButton.Font = Enum.Font.GothamBold
MaximizeButton.TextSize = 20
MaximizeButton.TextColor3 = COLOR_TEXT_PRIMARY
Instance.new("UICorner", MaximizeButton).CornerRadius = COLOR_BUTTON_RADIUS
MaximizeButton.Visible = false

local CloseButton = Instance.new("TextButton")
CloseButton.Name = "Close"
CloseButton.Parent = frame
CloseButton.Size = UDim2.new(0, BUTTON_WIDTH, 0, BUTTON_WIDTH)
CloseButton.Position = UDim2.new(1, -BUTTON_WIDTH - UI_PADDING, 0, (HEADER_HEIGHT-BUTTON_WIDTH)/2)
CloseButton.BackgroundColor3 = COLOR_BUTTON_DELETE
CloseButton.Text = "X"
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextSize = 20
CloseButton.TextColor3 = COLOR_TEXT_PRIMARY
Instance.new("UICorner", CloseButton).CornerRadius = COLOR_BUTTON_RADIUS

local ContentFrame = Instance.new("Frame", frame)
ContentFrame.Size = UDim2.new(1, 0, 1, -HEADER_HEIGHT)
ContentFrame.Position = UDim2.new(0, 0, 0, HEADER_HEIGHT)
ContentFrame.BackgroundTransparency = 1
ContentFrame.ClipsDescendants = true

local ToggleButton = Instance.new("TextButton", ContentFrame)
ToggleButton.Size = UDim2.new(1, -2 * UI_PADDING, 0, BUTTON_HEIGHT)
ToggleButton.Position = UDim2.new(0, UI_PADDING, 0, UI_PADDING)
ToggleButton.Text = "Invisible: OFF"
ToggleButton.BackgroundColor3 = COLOR_BUTTON_TOGGLE_OFF
ToggleButton.TextColor3 = COLOR_TEXT_PRIMARY
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 14
Instance.new("UICorner", ToggleButton).CornerRadius = COLOR_BUTTON_RADIUS

local function onToggle()
    InvisibleToggle()
    if isToggledOn then
        ToggleButton.Text = "Invisible: ON"
        ToggleButton.BackgroundColor3 = COLOR_BUTTON_TOGGLE_ON
    else
        ToggleButton.Text = "Invisible: OFF"
        ToggleButton.BackgroundColor3 = COLOR_BUTTON_TOGGLE_OFF
    end
end
ToggleButton.MouseButton1Click:Connect(onToggle)

local function calculateMinimizedWidth()
    local titleTextWidth = TextService:GetTextSize(TitleLabel.Text, TitleLabel.TextSize, TitleLabel.Font, Vector2.new(1000, HEADER_HEIGHT)).X
    return UI_PADDING + titleTextWidth + BUTTON_SPACING + BUTTON_WIDTH + BUTTON_SPACING + BUTTON_WIDTH + UI_PADDING
end

MinimizeButton.MouseButton1Click:Connect(function()
    isMinimized = true
    ContentFrame.Visible = false
    MinimizeButton.Visible = false
    MaximizeButton.Visible = true

    TitleLabel.Position = UDim2.new(0, UI_PADDING, 0, 0)
    TitleLabel.Size = UDim2.new(0, TextService:GetTextSize(TitleLabel.Text, TitleLabel.TextSize, TitleLabel.Font, Vector2.new(1000, HEADER_HEIGHT)).X, 0, HEADER_HEIGHT)

    local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0)
    local properties = {
        Size = UDim2.new(0, calculateMinimizedWidth(), 0, MINIMIZED_HEIGHT)
    }

    local tween = game:GetService("TweenService"):Create(frame, tweenInfo, properties)
    tween:Play()
    
    -- Memindahkan tombol secara langsung, tanpa menunggu tween selesai
    local newMaximizePositionX = UI_PADDING + TitleLabel.Size.X.Offset + BUTTON_SPACING
    MaximizeButton.Position = UDim2.new(0, newMaximizePositionX, 0, (MINIMIZED_HEIGHT - BUTTON_WIDTH) / 2)
    
    local newClosePositionX = newMaximizePositionX + BUTTON_WIDTH + BUTTON_SPACING
    CloseButton.Position = UDim2.new(0, newClosePositionX, 0, (MINIMIZED_HEIGHT - BUTTON_WIDTH) / 2)
end)

MaximizeButton.MouseButton1Click:Connect(function()
    isMinimized = false
    ContentFrame.Visible = true
    MinimizeButton.Visible = true
    MaximizeButton.Visible = false

    TitleLabel.Position = UDim2.new(0, UI_PADDING, 0, 0)
    TitleLabel.Size = UDim2.new(1, 0, 0, HEADER_HEIGHT)

    local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0)
    local properties = {
        Size = UDim2.new(0, GUI_WIDTH, 0, MAXIMIZED_HEIGHT)
    }

    local tween = game:GetService("TweenService"):Create(frame, tweenInfo, properties)
    tween:Play()

    -- Memindahkan tombol secara langsung, tanpa menunggu tween selesai
    MinimizeButton.Position = UDim2.new(1, -(BUTTON_WIDTH + BUTTON_SPACING) * 2 - UI_PADDING, 0, (HEADER_HEIGHT-BUTTON_WIDTH)/2)
    CloseButton.Position = UDim2.new(1, -BUTTON_WIDTH - UI_PADDING, 0, (HEADER_HEIGHT-BUTTON_WIDTH)/2)
end)

CloseButton.MouseButton1Click:Connect(function()
    if isToggledOn then
        InvisibleToggle()
    end
    mainGui:Destroy()
end)

-- Menggunakan properti Draggable bawaan Roblox
frame.InputBegan:Connect(function(input)
    if not isMinimized and (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
        local draggableFrame = frame:FindFirstChild("PosTracker_Frame") or frame
        if draggableFrame then
            local _, pos = frame.AbsolutePosition:Sub(input.Position)
            frame:SetAttribute("DragOffset", pos)
            input:Capture()
        end
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        local dragOffset = frame:GetAttribute("DragOffset")
        if dragOffset then
            local newPosition = input.Position + dragOffset
            frame.Position = UDim2.new(0, newPosition.X, 0, newPosition.Y)
        end
    end
end)

frame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        frame:SetAttribute("DragOffset", nil)
    end
end)
